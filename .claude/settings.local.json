{
  "permissions": {
    "allow": [
      "Bash(node -e:*)",
      "Bash(node:*)",
      "Bash(where:*)",
      "Bash(md-to-pdf:*)",
      "Bash(tasklist:*)",
      "Bash(findstr:*)",
      "Bash(npm run build:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npx supabase:*)",
      "Bash(find:*)",
      "Bash(tee:*)",
      "Bash(while read file)",
      "Bash(do node -e \"const fs = require(''''fs''''); let content = fs.readFileSync(''''$file'''', ''''utf8''''); if (content.includes(''''request.'''')) { content = content.replace(/_request:/g, ''''request:''''); fs.writeFileSync(''''$file'''', content); console.log(''''Fixed: $file''''); }\")",
      "Bash(done)",
      "Bash(curl:*)",
      "Bash(timeout 30 bash -c 'while ! grep -q \"\"\"\"Compiled successfully\\|Failed to compile\"\"\"\" <(npm run build 2>&1); do sleep 1; done; npm run build 2>&1')",
      "Bash(pkill -f \"npm run build\")",
      "Bash(npx next lint:*)",
      "Read(//c/Users/**)",
      "Bash(npm run lint:strict:*)",
      "Bash(grep:*)",
      "Bash(npm audit:*)",
      "Bash(npx tsx:*)",
      "Bash(npx tsc:*)",
      "Bash(if exist .next rmdir /s /q .next)",
      "Bash(taskkill:*)",
      "Bash(pkill:*)",
      "Bash(timeout 30 bash:*)",
      "Bash(dir /b 20250124*.sql)",
      "Bash(openssl rand:*)",
      "Bash(npm run dev:*)",
      "Bash(timeout 10 bash:*)",
      "Bash(code:*)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "Bash(mkdir:*)",
      "Bash(dir /s /b \"c:\\Users\\Faiz Hashmi\\theautodoctor\\src\\app\\session\")",
      "Bash(ren \"c:\\Users\\Faiz Hashmi\\theautodoctor\\src\\app\\mechanic\\session\\[id]\" \"[sessionId]\")",
      "Bash(test:*)",
      "Bash(for file in \"src/app/mechanic/crm/page.tsx\" \"src/app/mechanic/profile/page.tsx\" \"src/app/mechanic/earnings/page.tsx\" \"src/app/mechanic/sessions/virtual/page.tsx\" \"src/app/mechanic/partnerships/browse/page.tsx\" \"src/app/mechanic/partnerships/applications/page.tsx\" \"src/app/mechanic/partnerships/apply/[programId]/page.tsx\" \"src/app/mechanic/dashboard/page.tsx\" \"src/app/mechanic/dashboard/virtual/page.tsx\")",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then node -e \"const fs = require(''fs''); let content = fs.readFileSync(''$file'', ''utf8''); content = content.replace(/bg-gray-50/g, ''bg-gradient-to-b from-slate-950 via-slate-900 to-slate-950'').replace(/bg-slate-50/g, ''bg-gradient-to-b from-slate-950 via-slate-900 to-slate-950''); fs.writeFileSync(''$file'', content);\")",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(for file in \"src/app/mechanic/onboarding/virtual-only/page.tsx\" \"src/app/mechanic/onboarding/service-tier/page.tsx\" \"src/app/mechanic/onboarding/stripe/page.tsx\" \"src/app/mechanic/sessions/[sessionId]/complete/page.tsx\")",
      "Bash(then node -e \"const fs = require(''fs''); let content = fs.readFileSync(''$file'', ''utf8''); content = content.replace(/from-blue-50 via-white to-green-50/g, ''from-slate-950 via-slate-900 to-slate-950'').replace(/bg-gray-50/g, ''bg-gradient-to-b from-slate-950 via-slate-900 to-slate-950'').replace(/bg-slate-50/g, ''bg-gradient-to-b from-slate-950 via-slate-900 to-slate-950''); fs.writeFileSync(''$file'', content);\")",
      "Bash(for file in \"src/app/mechanic/crm/page.tsx\" \"src/app/mechanic/profile/page.tsx\" \"src/app/mechanic/earnings/page.tsx\" \"src/app/mechanic/sessions/virtual/page.tsx\" \"src/app/mechanic/partnerships/browse/page.tsx\" \"src/app/mechanic/partnerships/applications/page.tsx\" \"src/app/mechanic/partnerships/apply/[programId]/page.tsx\" \"src/app/mechanic/dashboard/page.tsx\" \"src/app/mechanic/dashboard/virtual/page.tsx\" \"src/app/mechanic/onboarding/virtual-only/page.tsx\" \"src/app/mechanic/onboarding/service-tier/page.tsx\" \"src/app/mechanic/onboarding/stripe/page.tsx\" \"src/app/mechanic/sessions/[sessionId]/complete/page.tsx\")",
      "Bash(then node -e \"const fs = require(''fs''); let content = fs.readFileSync(''$file'', ''utf8''); content = content.replace(/bg-white /g, ''bg-slate-800/50 backdrop-blur-sm border border-slate-700 '').replace(/text-gray-900/g, ''text-white'').replace(/text-gray-600/g, ''text-slate-400'').replace(/text-gray-700/g, ''text-slate-300'').replace(/text-gray-800/g, ''text-slate-200'').replace(/border-gray-300/g, ''border-slate-700'').replace(/border-gray-200/g, ''border-slate-700''); fs.writeFileSync(''$file'', content);\")",
      "Bash(psql:*)",
      "Bash(git checkout:*)",
      "Bash(dir:*)",
      "Bash(timeout 120 bash -c 'while ! grep -q \"\"\"\"Compiled successfully\\|Failed to compile\"\"\"\" <(npm run build 2>&1); do sleep 1; done; npm run build 2>&1')",
      "Bash(timeout 120 bash -c 'while ! grep -q \"\"Compiled successfully\\|Failed to compile\"\" <(npm run build 2>&1); do sleep 1; done; npm run build 2>&1')",
      "Bash(cd:*)",
      "Bash(del \"c:\\Users\\Faiz Hashmi\\theautodoctor\\src\\app\\chat\\[id]\\ChatRoomV4.tsx\")",
      "Bash(timeout 90 npm run build:*)",
      "Bash(cmd //c \"taskkill /F /PID 11588\")",
      "Bash(netstat:*)",
      "Bash(cmd //c \"taskkill /F /PID 9084 /PID 15020\")"
    ],
    "deny": [],
    "ask": []
  }
}
